{"version":3,"sources":["tooltip/playlists-icon.svg","tooltip/Location icon.svg","tooltip/Library icon.svg","tooltip/Logo-white.svg","tooltip/manage-users-icon.svg","tooltip/promotions-icon-24px.svg","tooltip/roles-icon.svg","tooltip/stations-icon-24px.svg","tooltip/dashboard-sidebar.jsx","tooltip/dashboard-main.jsx","tooltip/dashboard.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","DashboardSidebar","className","src","logoSVG","alt","data-tooltip","stationsSVg","playlistSVG","locationSVG","librarySVG","promotionsSVG","manageUserSVG","roleSVG","DashboardMain","DashboardTooltip","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oHAAAA,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,kD,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,gD,8QCqI5BC,EAxHU,WACvB,OACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,WAAWC,IAAKC,IAASC,IAAI,kBAG9C,yBAAKH,UAAU,oBACb,yBAAKA,UAAU,mCACb,wBAAIA,UAAU,MAAd,iBAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,6BACb,yBAAKI,eAAa,UAAUJ,UAAU,WACpC,yBACEA,UAAU,8BACVC,IAAKI,IACLF,IAAI,mBAGR,uBAAGH,UAAU,UAAb,YAEF,yBAAKA,UAAU,6BACb,yBAAKI,eAAa,YAAYJ,UAAU,WACtC,yBACEA,UAAU,8BACVC,IAAKK,IACLH,IAAI,mBAGR,uBAAGH,UAAU,UAAb,iBAMR,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,mCACb,wBAAIA,UAAU,MAAd,YAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,6BACb,yBAAKI,eAAa,YAAYJ,UAAU,WACtC,yBACEA,UAAU,8BACVC,IAAKM,IACLJ,IAAI,mBAGR,uBAAGH,UAAU,UAAb,cAEF,yBAAKA,UAAU,6BACb,yBAAKI,eAAa,UAAUJ,UAAU,WACpC,yBACEA,UAAU,8BACVC,IAAKO,IACLL,IAAI,oBAGR,uBAAGH,UAAU,UAAb,eAMR,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,mCACb,wBAAIA,UAAU,MAAd,eAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,6BACb,yBAAKI,eAAa,aAAaJ,UAAU,WACvC,yBACEA,UAAU,8BACVC,IAAKQ,IACLN,IAAI,mBAGR,uBAAGH,UAAU,UAAb,kBAMR,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,mCACb,wBAAIA,UAAU,MAAd,oBAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,6BACb,yBAAKI,eAAa,eAAeJ,UAAU,WACzC,yBACEA,UAAU,8BACVC,IAAKS,IACLP,IAAI,mBAGR,uBAAGH,UAAU,UAAb,iBAEF,yBAAKA,UAAU,6BACb,yBAAKI,eAAa,wBAAwBJ,UAAU,WAClD,yBACEA,UAAU,8BACVC,IAAKU,IACLR,IAAI,mBAGR,uBAAGH,UAAU,UAAb,+BClHCY,EANO,WACpB,OACE,+BCeWC,EAdU,WACvB,OACE,yBAAKb,UAAU,uBACb,yBAAKA,UAAU,mBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,yBAAKA,UAAU,SACb,4DCWOc,MAnBf,WACE,OAcE,kBAAC,EAAD,OCVgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c8331989.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/playlists-icon.a020652a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Location icon.47f72b36.svg\";","module.exports = __webpack_public_path__ + \"static/media/Library icon.44e79383.svg\";","module.exports = __webpack_public_path__ + \"static/media/Logo-white.3180a6d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/manage-users-icon.379252b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/promotions-icon-24px.54c34de6.svg\";","module.exports = __webpack_public_path__ + \"static/media/roles-icon.aa17ed24.svg\";","module.exports = __webpack_public_path__ + \"static/media/stations-icon-24px.926f57ec.svg\";","import React from 'react';\n\nimport './dashboard.styles.scss';\n\nimport playlistSVG from './playlists-icon.svg';\nimport locationSVG from './Location icon.svg';\nimport librarySVG from './Library icon.svg';\nimport logoSVG from './Logo-white.svg';\nimport manageUserSVG from './manage-users-icon.svg';\nimport promotionsSVG from './promotions-icon-24px.svg';\nimport roleSVG from './roles-icon.svg';\nimport stationsSVg from './stations-icon-24px.svg';\n\nconst DashboardSidebar = () => {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"logo-container hidden\">\n        <img className=\"logo-svg\" src={logoSVG} alt=\"Josplay Logo\" />\n      </div>\n\n      <div className=\"sidebar--section\">\n        <div className=\"sidebar--section__header hidden\">\n          <h4 className=\"h4\">Browse Music</h4>\n        </div>\n        <div className=\"sidebar--items\">\n          <div className=\"sidebar--items__block\">\n            <div className=\"sidebar--items__block-sec\">\n              <div data-tooltip=\"Station\" className=\"tooltip\">\n                <img\n                  className=\"sidebar--items__block--icon\"\n                  src={stationsSVg}\n                  alt=\"stations icon\"\n                />\n              </div>\n              <p className=\"hidden\">Station</p>\n            </div>\n            <div className=\"sidebar--items__block-sec\">\n              <div data-tooltip=\"Playlists\" className=\"tooltip\">\n                <img\n                  className=\"sidebar--items__block--icon\"\n                  src={playlistSVG}\n                  alt=\"stations icon\"\n                />\n              </div>\n              <p className=\"hidden\">Playlists</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"sidebar--section\">\n        <div className=\"sidebar--section__header hidden\">\n          <h4 className=\"h4\">For You</h4>\n        </div>\n        <div className=\"sidebar--items\">\n          <div className=\"sidebar--items__block\">\n            <div className=\"sidebar--items__block-sec\">\n              <div data-tooltip=\"Locations\" className=\"tooltip\">\n                <img\n                  className=\"sidebar--items__block--icon\"\n                  src={locationSVG}\n                  alt=\"Location icon\"\n                />\n              </div>\n              <p className=\"hidden\">Locations</p>\n            </div>\n            <div className=\"sidebar--items__block-sec\">\n              <div data-tooltip=\"Library\" className=\"tooltip\">\n                <img\n                  className=\"sidebar--items__block--icon\"\n                  src={librarySVG}\n                  alt=\"A Library icon\"\n                />\n              </div>\n              <p className=\"hidden\">Library</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"sidebar--section\">\n        <div className=\"sidebar--section__header hidden\">\n          <h4 className=\"h4\">Promotions</h4>\n        </div>\n        <div className=\"sidebar--items\">\n          <div className=\"sidebar--items__block\">\n            <div className=\"sidebar--items__block-sec\">\n              <div data-tooltip=\"Promotions\" className=\"tooltip\">\n                <img\n                  className=\"sidebar--items__block--icon\"\n                  src={promotionsSVG}\n                  alt=\"stations icon\"\n                />\n              </div>\n              <p className=\"hidden\">Promotions</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"sidebar--section\">\n        <div className=\"sidebar--section__header hidden\">\n          <h4 className=\"h4\">User Management</h4>\n        </div>\n        <div className=\"sidebar--items\">\n          <div className=\"sidebar--items__block\">\n            <div className=\"sidebar--items__block-sec\">\n              <div data-tooltip=\"Manage Users\" className=\"tooltip\">\n                <img\n                  className=\"sidebar--items__block--icon\"\n                  src={manageUserSVG}\n                  alt=\"stations icon\"\n                />\n              </div>\n              <p className=\"hidden\">Manage Users</p>\n            </div>\n            <div className=\"sidebar--items__block-sec\">\n              <div data-tooltip=\"Roles and Permissions\" className=\"tooltip\">\n                <img\n                  className=\"sidebar--items__block--icon\"\n                  src={roleSVG}\n                  alt=\"stations icon\"\n                />\n              </div>\n              <p className=\"hidden\">Roles and Permissions</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardSidebar;\n","import React from 'react';\n\nimport './dashboard.styles.scss';\n\nconst DashboardMain = () => {\n  return (\n    <div></div>\n  );\n}\n\nexport default DashboardMain;\n","import React from 'react';\n\nimport DashboardSidebar from './dashboard-sidebar';\nimport DashboardMain from './dashboard-main';\n\nimport './dashboard.styles.scss';\n\nconst DashboardTooltip = () => {\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"dashboard--main\">\n        <DashboardSidebar />\n        <DashboardMain />\n      </div>\n      <div className=\"media\">\n        <h3>Media Player will go here</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardTooltip;\n","import React from 'react';\n// import SVG from './404.svg';\n\n// import SubcriptionUI from './sub';\nimport Dashboard from './tooltip/dashboard';\n// import './App.css';\n\nfunction App() {\n  return (\n    // <div className=\"app__container\">\n    //   <div className=\"app__image\">\n    //     <img src={SVG} alt=\"A boy lost in space\" height=\"70%\" width=\"70%\" />\n    //   </div>\n    //   <div className=\"app__text\">\n    //     <h1 className=\"app__text--big\">An error occurred</h1>\n    //     <p className=\"app__text--small\">\n    //       Seems like you got lost.\n    //       <span className=\"app__text--link\"> <a href=\"#\">Reload</a> </span>\n    //       this page to try again.\n    //     </p>\n    //   </div>\n    // </div>\n    <Dashboard />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}